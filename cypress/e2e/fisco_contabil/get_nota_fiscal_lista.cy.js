// /v3/nota_fiscal_lista/{Filial}/{Registro_Nota}/{Data_Inicial}/{Data_Final}/{CNPJ_CPF} - Lista de notas fiscais
// Retornar lista das notas fiscais consultadas
// 204 - Sem dados de retorno
// 200 - OK

const BASE_URL = Cypress.env('BASE_URL');
const PATH_API = '/Fisco/Contabil/v3_nota_fiscal_lista';
const Authorization = Cypress.env('API.PRAGMA');
const Filial = "123123123";
const Registro_Nota = "123123123";
const Data_Inicial = "123123123";
const Data_Final = "123123123";
const CNPJ_CPF = "123123123";

describe('Fisco/ContÃ¡bil - GET - /v3/nota_fiscal_lista/{Filial}/{Registro_Nota}/{Data_Inicial}/{Data_Final}/{CNPJ_CPF}', { env: { hideCredendials: true } }, () => {
  it('Deve retornar 200 e as propriedades das notas fiscais', () => {
    cy.api({
      method: 'GET',
      url: `${BASE_URL}/${PATH_API}/${Filial}/${Registro_Nota}/${Data_Inicial}/${Data_Final}/${CNPJ_CPF}`,
      headers: { Authorization },
      failOnStatusCode: false
    }).then((response) => {
      expect(response.status).to.eq(200);
      expect(response.duration).to.be.lessThan(2000);
      const nota = response.body.retorno[0].notasfiscais[0];
      expect(nota).to.have.property('idfilial');
      expect(nota).to.have.property('idregistronota');
      expect(nota).to.have.property('idtipofrete');
      expect(nota).to.have.property('idusuario');
      expect(nota).to.have.property('idoperacao');
      expect(nota).to.have.property('idprocesso');
      expect(nota).to.have.property('idprocessomestre');
      expect(nota).to.have.property('idsituacaonota');
      expect(nota).to.have.property('idcnpj_cpf');
      expect(nota).to.have.property('idtipodocumentofiscal');
      expect(nota).to.have.property('idtiponumeracao');
      expect(nota).to.have.property('uf');
      expect(nota).to.have.property('idobservacaofiscal');
      expect(nota).to.have.property('idmotorista');
      expect(nota).to.have.property('idecf');
      expect(nota).to.have.property('iddescarga');
      expect(nota).to.have.property('idfilialorigem');
      expect(nota).to.have.property('idfilialdestino');
      expect(nota).to.have.property('numeronota');
      expect(nota).to.have.property('serie');
      expect(nota).to.have.property('referentecupom');
      expect(nota).to.have.property('datamovimento');
      expect(nota).to.have.property('dataemissao');
      expect(nota).to.have.property('cce_rg');
      expect(nota).to.have.property('totalfrete');
      expect(nota).to.have.property('totalseguro');
      expect(nota).to.have.property('totalfinanceiro');
      expect(nota).to.have.property('totaldesconto');
      expect(nota).to.have.property('totalproduto');
      expect(nota).to.have.property('totalnota');
      expect(nota).to.have.property('totaloutras');
      expect(nota).to.have.property('totaldespesas');
      expect(nota).to.have.property('totalnotascf');
      expect(nota).to.have.property('datasaida');
      expect(nota).to.have.property('nome');
      expect(nota).to.have.property('idveiculo');
      expect(nota).to.have.property('volume');
      expect(nota).to.have.property('idsituacaoentrega');
      expect(nota).to.have.property('idpessoabasefiscal');
      expect(nota).to.have.property('quantidadereimpressao');
      expect(nota).to.have.property('idnfesefaz');
      expect(nota).to.have.property('mensagemsefaz');
      expect(nota).to.have.property('idsituacaonotasefaz');
      expect(nota).to.have.property('idprotocoloautorizacaonfe');
      expect(nota).to.have.property('dataautorizacaosefaz');
      expect(nota).to.have.property('idprotocolodpecnfe');
      expect(nota).to.have.property('totaldespesasnaotributada');
      expect(nota).to.have.property('chavemd5');
      expect(nota).to.have.property('totaldeducaoiss');
      expect(nota).to.have.property('idpessoaremetente');
      expect(nota).to.have.property('idregistronotareferenciada');
      expect(nota).to.have.property('placa');
      expect(nota).to.have.property('horaemissao');
      expect(nota).to.have.property('idvolumeespecie');
      expect(nota).to.have.property('horasaida');
      expect(nota).to.have.property('idtiporateiofrete');
      expect(nota).to.have.property('cfc');
      expect(nota).to.have.property('idprotocolomde');
      expect(nota).to.have.property('emailnfe');
      expect(nota).to.have.property('pinemitido');
      expect(nota).to.have.property('consumofinal');
      expect(nota).to.have.property('numeronfsubstituida');
      expect(nota).to.have.property('cadastronacionalobras');
      expect(nota).to.have.property('idindicativoprestacaoservicoreinf');
      expect(nota).to.have.property('idclassificacaoservicoprestadoreinf');
      expect(nota).to.have.property('idtiporepassereinf');
      expect(nota).to.have.property('idtipocontribuinte');
      expect(nota).to.have.property('peso');
      expect(nota).to.have.property('idservicoprestado');
      expect(nota.endereco[0]).to.have.property('idfilial');
      expect(nota.endereco[0]).to.have.property('idenderecobase');
      expect(nota.endereco[0]).to.have.property('idregistronota');
      expect(nota.endereco[0]).to.have.property('idpedidovenda');
      expect(nota.endereco[0]).to.have.property('idcidade');
      expect(nota.endereco[0]).to.have.property('endereco');
      expect(nota.endereco[0]).to.have.property('complemento');
      expect(nota.endereco[0]).to.have.property('bairro');
      expect(nota.endereco[0]).to.have.property('numero');
      expect(nota.endereco[0]).to.have.property('caixapostal');
      expect(nota.endereco[0]).to.have.property('cep');
      expect(nota.endereco[0]).to.have.property('ddd');
      expect(nota.endereco[0]).to.have.property('telefone');
      expect(nota.endereco[0]).to.have.property('idgruporota');
      expect(nota.endereco[0]).to.have.property('idrota');
      expect(nota.endereco[0]).to.have.property('idrotacidade');
      expect(nota.endereco[0]).to.have.property('cidade');
      expect(nota.endereco[0]).to.have.property('iditemservico');
      expect(nota.endereco[0]).to.have.property('idfilialafaturar');
      expect(nota.endereco[0]).to.have.property('idautorizacaodevolucao');
      expect(nota.endereco[0]).to.have.property('idcnpj_cpf');
      expect(nota.impostos[0]).to.have.property('tipoimposto');
      expect(nota.impostos[0]).to.have.property('valorbasecalculo');
      expect(nota.impostos[0]).to.have.property('aliquota');
      expect(nota.impostos[0]).to.have.property('valorimposto');
      expect(nota.produtos[0]).to.have.property('idproduto');
      expect(nota.produtos[0]).to.have.property('idgradex');
      expect(nota.produtos[0]).to.have.property('idgradey');
      expect(nota.produtos[0]).to.have.property('idbenspatrimonio');
      expect(nota.produtos[0]).to.have.property('idincorporacao');
      expect(nota.produtos[0]).to.have.property('quantidade');
      expect(nota.produtos[0]).to.have.property('idoperacaoproduto');
      expect(nota.produtos[0]).to.have.property('idcodigonbm');
      expect(nota.produtos[0]).to.have.property('valorunitario');
      expect(nota.produtos[0]).to.have.property('totalitem');
      expect(nota.produtos[0]).to.have.property('totaldespesasacessorias');
      expect(nota.produtos[0]).to.have.property('idcodigofiscal');
      expect(nota.produtos[0]).to.have.property('totaldescontofiscal');
      expect(nota.produtos[0]).to.have.property('totalfreteedespesa');
      expect(nota.produtos[0]).to.have.property('gtin');
      expect(nota.produtos[0]).to.have.property('valorbasecalculo_icms');
      expect(nota.produtos[0]).to.have.property('percentualbasecalculo_icms');
      expect(nota.produtos[0]).to.have.property('aliquota_icms');
      expect(nota.produtos[0]).to.have.property('idsituacaotributaria');
      expect(nota.produtos[0]).to.have.property('aliquota_ipi');
      expect(nota.produtos[0]).to.have.property('basecalculo_icmssubstituto');
      expect(nota.produtos[0]).to.have.property('valor_icmssubstituto');
      expect(nota.produtos[0]).to.have.property('aliquota_icmssubstituto');
      expect(nota.produtos[0]).to.have.property('aliquota_pis');
      expect(nota.produtos[0]).to.have.property('id_aliquota_cofinsibge');
      expect(nota.produtos[0]).to.have.property('aliquotaicmsapropriar');
      expect(nota.produtos[0]).to.have.property('baseicmsapropriar');
      expect(nota.produtos[0]).to.have.property('valoricmsapropriar');
      expect(nota.produtos[0]).to.have.property('aliquotaicmssubsapropriar');
      expect(nota.produtos[0]).to.have.property('baseicmssubsapropriar');
      expect(nota.produtos[0]).to.have.property('valoricmssubsapropriar');
      expect(nota.titulos[0]).to.have.property('idtitulo');
      expect(nota.titulos[0]).to.have.property('idparcelatitulo');
      expect(nota.titulos[0]).to.have.property('datavencimento');
      expect(nota.titulos[0]).to.have.property('valorcontabil');
      expect(nota).to.have.property('observacaonota');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('idguianacionalrecolhimento');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('numerodocumento');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('autenticacaobancaria');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('modelodocumento');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('datavencimento');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('datapagamento');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('idobservacaofiscal');
      expect(nota.guianacionalrecolhimento[0]).to.have.property('valordocumento');
    });
  });
});